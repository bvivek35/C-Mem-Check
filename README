This is a simple memory checking module for C.
This will help in detecting memory leaks, double free and freeing unallocated pointers.

NOTE : This will run on unix. I cannot promise support for windows.

To Use :

1) setup the required folders using the configure script
	use :
		./configure.sh

2) compile the library(static lib now)
	use :
		make lib
3) add the my_mem_check.h file with a include preprocessor directive to your sources.

4) compile your sources.
	use the options -Dmalloc=my_malloc -Dfree=my_free
	use -I option to include the path for my_mem_check.h	

	use the libdetect.a while linking(-ldetect)
	use -L option to specify 
	

5) the report will be printed at the terminal after the program finishes execution.
--------------------------------------------------------------------------------------------
Note On gcc Compiler Options....

-I option :
		add a header file search path.
		Eg. if header is /home/us/headers/example.h
		use "-I/home/us/headers" as option without quotes
		
		compiling :
		use -c option to get the object file. this needs to be linked with libraries to produce an executable.
		
		add macros :
		use -D option 
			-Dmac_name=mac_expansion
		In the project compiling client files, substitute malloc with my_malloc and free with my_free using 
		"-Dmalloc=my_malloc" and "-Dfree=my_free" respectively(no quotes)	
		Linking :
			Adding library search path using -L option
			Eg. If library is /home/ex/lib/libexample.a
			
			use -L/home/ex/lib to add the directory
			use -lexample at the end to actually use the library
			Convention used is l(ib)example(.a)
			
------------------------------------------------------------------------------------------


